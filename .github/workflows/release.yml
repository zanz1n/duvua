name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build_amd64:
    name: Build (amd64)
    runs-on: ubuntu-24.04

    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          # cache: true
          # cache-dependency-path: "**/go.sum"

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Download packages
        run: go mod download

      - name: Build bot
        env:
          CGO_ENABLED: 0
          REF: ${{ github.ref }}
          POST_BUILD_CHMOD: 755
          DEBUG: 0
        run: make VERSION=${REF:11} GOARCH=amd64 build-bot

      - name: Build player
        env:
          CGO_ENABLED: 0
          REF: ${{ github.ref }}
          POST_BUILD_CHMOD: 755
          DEBUG: 0
        run: make VERSION=${REF:11} GOARCH=amd64 build-player

      - name: Build davinci
        env:
          CGO_ENABLED: 1
          REF: ${{ github.ref }}
          POST_BUILD_CHMOD: 755
          DEBUG: 0
        run: make VERSION=${REF:11} GOARCH=amd64 build-davinci

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: amd64-bins
          path: ./bin/*
          retention-days: 1

  build_arm64:
    name: Build (arm64)
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          # cache: true
          # cache-dependency-path: "**/go.sum"

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Download packages
        run: go mod download

      - name: Build bot
        env:
          CGO_ENABLED: 0
          REF: ${{ github.ref }}
          POST_BUILD_CHMOD: 755
          DEBUG: 0
        run: make VERSION=${REF:11} GOARCH=arm64 build-bot

      - name: Build player
        env:
          CGO_ENABLED: 0
          REF: ${{ github.ref }}
          POST_BUILD_CHMOD: 755
          DEBUG: 0
        run: make VERSION=${REF:11} GOARCH=arm64 build-player

      - name: Build davinci
        env:
          CGO_ENABLED: 1
          REF: ${{ github.ref }}
          POST_BUILD_CHMOD: 755
          DEBUG: 0
        run: make VERSION=${REF:11} GOARCH=arm64 build-davinci

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: arm64-bins
          path: ./bin/*
          retention-days: 1

  publish:
    name: Publish
    runs-on: ubuntu-24.04
    needs:
      - build_amd64
      - build_arm64

    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Download artifacts (amd64)
        uses: actions/download-artifact@v4
        with:
          name: amd64-bins
          path: ./bin
          merge-multiple: true

      - name: Download artifacts (arm64)
        uses: actions/download-artifact@v4
        with:
          name: arm64-bins
          path: ./bin
          merge-multiple: true

      - name: Create checksum
        run: make gen-checksums

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
          files: |
            checksums.txt
            LICENSE
            bin/duvua-bot-linux-x86_64
            bin/duvua-bot-linux-aarch64
            bin/duvua-player-linux-x86_64
            bin/duvua-player-linux-aarch64
            bin/duvua-davinci-linux-x86_64
            bin/duvua-davinci-linux-aarch64
